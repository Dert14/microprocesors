  .syntax unified
  .set PRESCALER_MAX,50
  .set PERIPH_BASE,0x40000000
  .set AHB1PERIPH_OFFSET, 0x00020000
  .set GPIOG_BASE,PERIPH_BASE+AHB1PERIPH_OFFSET+0x1800
  .set GPIOA,PERIPH_BASE+AHB1PERIPH_OFFSET
  .set BSRR_OFFSET,0x18
  .set IDR_OFFSET, 0x10



 .global move_square_asm
 .global RGB16Pack
 .global kopiuj_blok_pamieci
 .global kasuj_blok_pamieci
 .global SetCenterPixel
 .global mruganie_ledem

 .global x
 .global y

 @.global fillMemory

 .section .data
 LEDSTATE_AT_0_AND_PRESCALER_AT_4:
 .word 0,PRESCALER_MAX

 dx_asm:
 .word 2
 dy_asm:
 .word 2


 .section .text

@r0 - adres źródła
@r1 - adres przeznaczenia
@r2 - liczba słów do przekopiowania (wielokrotnośc 8)

kopiuj_blok_pamieci:
	  LSR   r2,r2,#3
	  PUSH {r4-r10}
kopiuj_osiem_slow:
      LDM    r0!, {r3-r10}
      STM    r1!, {r3-r10}
      SUBS   r2, r2, #1
      BNE    kopiuj_osiem_slow
      POP {r4-r10}
      MOV PC,LR


@r0 - adres kasowanego obszaru
@r1 - liczba słów do skasowania (wielokrotnośc 8)

kasuj_blok_pamieci:
	  LSR   r1,r1,#3
	  PUSH {r4-r9}
	  LDR r2,=fill+4
	  LDM   r2, {r3-r9}
	  LDR r2,[r2]
wypelnij_osiem_slow:
      STM    r0!, {r2-r9}
      SUBS   r1, r1, #1
      BNE    wypelnij_osiem_slow
      POP {r4-r9}
      MOV PC,LR
fill:
	.word 0,0,0,0,0,0,0,0

@R0 - skladowa Blue
@R1 - skladowa Green
@R2 - skladowa Red

@R0 - wyjscie 16bit RGB

RGB16Pack:
	AND r0,r0,#0x1f
	BFI r0,r1,#5,#6
	BFI r0,r2,#11,#5
	MOV PC,LR



move_square_asm:

@skladowa x
 ldr r0,=x
 ldr r2,=dx_asm
 ldr r3,[r2]
 ldr r1,[r0]
 add r1,r1,r3
 str r1,[r0]
 cmp r1, #1
 ble neg_x
 cmp r1, #240-34
 blt no_neg_x
 neg_x:
 rsb r3, r3, #0
 str r3,[r2]
 no_neg_x:

@skladowa y
 ldr r0,=y
 ldr r3,[r2,#4]
 ldr r1,[r0]
 add r1,r1,r3
 str r1,[r0]
 cmp r1, #1
 ble neg_y
 cmp r1, #320-34
 blt no_neg_y
 neg_y:
 rsb r3, r3, #0
 str r3,[r2,#4]
 no_neg_y:
 mov pc,lr



 SetCenterPixel:
 ldr r0,=0xd0100000
 mov r2,#0x1F
 ldr r3,=77040
 add r0,r0,r3
 strh r2, [r0]
 mov pc,lr

 mruganie_ledem:
ldr r2,=GPIOA+IDR_OFFSET
ldr r3,[r2]
and r4,r3,#1
cbz r4,pomoc

ldr r0,=GPIOG_BASE+BSRR_OFFSET
mov r1,#0x2000
str r1,[r0]

mov r5,#65000
skok_1:
sub r5,r5,#1
nop
nop
nop
nop
nop
CBZ r5, delay1
B skok_1
delay1:


mov r1,#0x20000000
str r1,[r0]

mov r5,#65000
skok_2:
sub r5,r5,#1
nop
nop
nop
nop
nop
CBZ r5, delay2
B skok_2
delay2:

mov r1,#0x4000
str r1,[r0]

mov r5,#65000
skok_3:
sub r5,r5,#1
nop
nop
nop
nop
nop
CBZ r5, delay3
B skok_3
delay3:

mov r1,#0x40000000
str r1,[r0]

mov r5,#60000
skok_4:
sub r5,r5,#1
nop
nop
nop
nop
nop
CBZ r5, delay4
B skok_4
delay4:

pomoc:
ldr r0,=GPIOG_BASE+BSRR_OFFSET
mov r1,#0x20000000
str r1,[r0]

mov r1,#0x40000000
str r1,[r0]
mov pc,lr